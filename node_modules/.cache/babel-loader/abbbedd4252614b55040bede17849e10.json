{"ast":null,"code":"var _jsxFileName = \"/Users/anikabernstein/Development/Playground/CardsBnB/src/App.js\";\nimport './App.css';\nimport YourCards from './containers/YourCards';\nimport CardContainer from './containers/CardContainer';\nimport { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardUrl = 'https://deckofcardsapi.com/api/deck/new/draw/?count=52';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards: [],\n      yourCards: []\n    };\n\n    this.checkCard = clickedCard => {\n      if (this.state.yourCards.includes(clickedCard)) {\n        this.removeCardFromHand(clickedCard);\n        this.addCardToDeck(clickedCard);\n      } else {\n        this.addCardToHand(clickedCard);\n        this.removeCardFromDeck(clickedCard);\n      }\n    };\n\n    this.addCardToHand = clickedCard => {\n      const findMatch = this.state.yourCards.find(yourCard => yourCard === clickedCard);\n\n      if (!findMatch) {\n        this.setState({\n          yourCards: [...this.state.yourCards, clickedCard]\n        });\n      }\n    };\n\n    this.addCardToDeck = clickedCard => {\n      const findMatch = this.state.cards.find(card => card === clickedCard);\n\n      if (!findMatch) {\n        this.setState({\n          cards: [...this.state.cards, clickedCard]\n        });\n      }\n    };\n\n    this.removeCardFromHand = clickedCard => {\n      const newHand = this.state.yourCards.filter(yourCard => clickedCard !== yourCard);\n      this.setState({\n        yourCards: newHand\n      });\n    };\n\n    this.removeCardFromDeck = clickedCard => {\n      const newDeck = this.state.cards.filter(card => clickedCard !== card);\n      this.setState({\n        cards: newDeck\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(cardUrl).then(response => response.json()).then(data => this.setState({\n      cards: data.cards\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(YourCards, {\n        cards: this.state.YourCards,\n        checkCard: this.checkCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n        cards: this.state.cards,\n        checkCard: this.checkCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/anikabernstein/Development/Playground/CardsBnB/src/App.js"],"names":["YourCards","CardContainer","Component","cardUrl","App","state","cards","yourCards","checkCard","clickedCard","includes","removeCardFromHand","addCardToDeck","addCardToHand","removeCardFromDeck","findMatch","find","yourCard","setState","card","newHand","filter","newDeck","componentDidMount","fetch","then","response","json","data","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport YourCards from './containers/YourCards'\nimport CardContainer from './containers/CardContainer'\nimport { Component } from 'react';\n\nconst cardUrl = 'https://deckofcardsapi.com/api/deck/new/draw/?count=52'\n\nexport default class App extends Component {\n\n\n\nstate = {\n  cards: [],\n  yourCards: []\n}\n\ncomponentDidMount() {\n  fetch(cardUrl)\n    .then(response => response.json())\n    .then(data => \n      this.setState(\n        { cards: data.cards }\n      )\n    )\n}\n\ncheckCard = (clickedCard) => {\n  if (this.state.yourCards.includes(clickedCard)){\n    this.removeCardFromHand(clickedCard)\n    this.addCardToDeck(clickedCard)\n  }\n  else {\n    this.addCardToHand(clickedCard)\n    this.removeCardFromDeck(clickedCard)\n  }\n}\n\n\naddCardToHand = (clickedCard) => {\n\n  const findMatch = this.state.yourCards.find(\n    (yourCard) => yourCard === clickedCard\n  );\n\n  if (!findMatch){\n    this.setState({\n      yourCards: [...this.state.yourCards, clickedCard]\n    })\n  }\n}\n\naddCardToDeck = (clickedCard) => {\n\n  const findMatch = this.state.cards.find(\n    (card) => card === clickedCard\n  );\n\n  if (!findMatch){\n    this.setState({\n      cards: [...this.state.cards, clickedCard]\n    })\n  }\n}\n\n\nremoveCardFromHand = (clickedCard) => {\n\n  const newHand = this.state.yourCards.filter(\n    (yourCard) => clickedCard !== yourCard\n  );\n\n  this.setState({\n    yourCards: newHand\n  })\n}\n\nremoveCardFromDeck = (clickedCard) => {\n\n  const newDeck = this.state.cards.filter(\n    (card) => clickedCard !== card\n  );\n\n  this.setState({\n    cards: newDeck\n  })\n}\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <YourCards  cards={ this.state.YourCards } checkCard={ this.checkCard } />\n        <CardContainer cards={ this.state.cards } checkCard={ this.checkCard } />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}